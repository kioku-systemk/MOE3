VertexShader = [[attribute vec3 pos;attribute vec4 col;attribute vec3 nor;attribute vec2 uv;uniform mat4 proj;uniform mat4 view;uniform mat4 world;uniform vec4 znearfar;varying HIGHP vec3 vtx_nor;varying HIGHP vec4 opos;varying HIGHP float logz;void main(){    opos = proj * view * world * vec4(pos, 1.0);    gl_Position = opos;}]]FragmentShader = [[uniform sampler2D color_tex; uniform vec4 color;uniform sampler2D srcBuf;uniform sampler2D srcBuf_depth;uniform vec4 param;uniform vec4 time;uniform mat4 proj;uniform mat4 view;uniform vec4 demotime;uniform vec4 znearfar;varying HIGHP vec3 vtx_nor;varying HIGHP vec4 opos;varying HIGHP float logz;void main(){	float light = color.g < 0.5 ? 1.0 : 0.0; // TEMP	gl_FragColor = vec4(color.rgb, light);}]]GeometryShader = ""DepthTest = trueBlend = falseBlendSrc = "SRC_ALPAH"BlendDst = "ONE_MINUS_SRC_ALPHA"Priority=10