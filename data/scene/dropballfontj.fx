VertexShader = [[attribute vec3 pos;attribute vec4 col;attribute vec3 nor;attribute vec2 uv;uniform sampler2D color_tex;uniform mat4 proj;uniform mat4 view;uniform mat4 world;uniform vec4 p1;varying HIGHP vec2 vtx_uv;varying LOWP vec4    vtx_col;void main(void){	vtx_uv = uv;	vtx_col = col;	gl_Position = proj * view * world * vec4(pos,1);}]]FragmentShader = [[uniform sampler2D color_tex; uniform vec4 color;uniform vec4 time;uniform vec4 demotime;uniform vec4 p1;uniform vec4 ep2;varying HIGHP vec2 vtx_uv;varying LOWP vec4  vtx_col;float PI = 3.1415926;void main(void){	float ta = max(0.0, min(2.0, demotime.x - 56.594 + vtx_uv.x*0.001));	ta = max(0.0,sin(ta*2.5));	float ll = 0.9*4.0;	gl_FragColor = vec4(ll,ll,ll,ta) * texture2D(color_tex, vtx_uv);	if (gl_FragColor.a < 0.2)		discard;}]]GeometryShader = ""DepthTest = trueBlend = trueBlendSrc = "SRC_ALPHA"BlendDst = "ONE_MINUS_SRC_ALPHA"--COLOR"Priority=21