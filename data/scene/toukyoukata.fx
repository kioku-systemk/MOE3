VertexShader = [[attribute vec3 pos;attribute vec4 col;attribute vec3 nor;attribute vec2 uv;uniform sampler2D color_tex;uniform mat4 proj;uniform mat4 view;uniform mat4 world;uniform vec4 p1;varying HIGHP vec2 vtx_uv;varying LOWP vec4    vtx_col;void main(void){	vtx_uv = uv;	vtx_col = col;	gl_Position = proj * view * world * vec4(pos+vec3(0,0.01,-0.05),1);}]]FragmentShader = [[uniform sampler2D color_tex; uniform vec4 color;uniform vec4 time;uniform vec4 demotime;uniform vec4 p1;varying HIGHP vec2 vtx_uv;varying LOWP vec4  vtx_col;void main(void){	float tv = max(0.0,demotime.x - 18.0);	vec2 uv = vtx_uv;	uv.x = min(tv,uv.x);	float fd = vtx_uv.x;	fd = pow(1.0 - fd,6.0)+tv/4.0; 	gl_FragColor = vec4(0.0, 0.0, 0.0,  fd)*color * texture2D(color_tex, uv);//	gl_FragColor = vec4(0,0,0,0);//vec4(1.0, 0.19, 0.45, 1.0)*color * texture2D(color_tex, vtx_uv);}]]GeometryShader = ""DepthTest = falseBlend = trueBlendSrc = "SRC_ALPAH"BlendDst = "ONE_MINUS_SRC_ALPHA"Priority=10