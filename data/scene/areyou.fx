VertexShader = [[attribute vec3 pos;attribute vec4 col;attribute vec3 nor;attribute vec2 uv;uniform sampler2D color_tex;uniform mat4 proj;uniform mat4 view;uniform mat4 world;uniform vec4 p1;uniform vec4 demotime;varying HIGHP vec2 vtx_uv;varying LOWP vec4    vtx_col;void main(void){	vtx_uv = uv;	vtx_col = col;	vec3 trs = vec3(-50.0,0,0);	trs.x += min(1.0, max(0.0,demotime.x - 127.5))*50.0;	trs.x += min(1.0, max(0.0,demotime.x - 129.0))*50.0;	gl_Position = proj * view * world * vec4(pos+trs,1);}]]FragmentShader = [[uniform sampler2D color_tex; uniform vec4 color;uniform vec4 time;uniform vec4 p1;varying HIGHP vec2 vtx_uv;varying LOWP vec4  vtx_col;void main(void){	gl_FragColor = vec4(0.0,0.0,0.0,1.0)*color * texture2D(color_tex, vtx_uv);}]]GeometryShader = ""DepthTest = falseBlend = trueBlendSrc = "SRC_ALPAH"BlendDst = "ONE_MINUS_SRC_ALPHA"Priority=10